/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __DBUS_PAUSE_H__
#define __DBUS_PAUSE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.theldus.anipaper.window */

#define TYPE_ORG_THELDUS_ANIPAPER_WINDOW (org_theldus_anipaper_window_get_type ())
#define ORG_THELDUS_ANIPAPER_WINDOW(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW, OrgTheldusAnipaperWindow))
#define IS_ORG_THELDUS_ANIPAPER_WINDOW(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW))
#define ORG_THELDUS_ANIPAPER_WINDOW_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW, OrgTheldusAnipaperWindowIface))

struct _OrgTheldusAnipaperWindow;
typedef struct _OrgTheldusAnipaperWindow OrgTheldusAnipaperWindow;
typedef struct _OrgTheldusAnipaperWindowIface OrgTheldusAnipaperWindowIface;

struct _OrgTheldusAnipaperWindowIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_pause) (
    OrgTheldusAnipaperWindow *object,
    GDBusMethodInvocation *invocation);

};

GType org_theldus_anipaper_window_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_theldus_anipaper_window_interface_info (void);
guint org_theldus_anipaper_window_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_theldus_anipaper_window_complete_pause (
    OrgTheldusAnipaperWindow *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void org_theldus_anipaper_window_call_pause (
    OrgTheldusAnipaperWindow *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_theldus_anipaper_window_call_pause_finish (
    OrgTheldusAnipaperWindow *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_theldus_anipaper_window_call_pause_sync (
    OrgTheldusAnipaperWindow *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY (org_theldus_anipaper_window_proxy_get_type ())
#define ORG_THELDUS_ANIPAPER_WINDOW_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY, OrgTheldusAnipaperWindowProxy))
#define ORG_THELDUS_ANIPAPER_WINDOW_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY, OrgTheldusAnipaperWindowProxyClass))
#define ORG_THELDUS_ANIPAPER_WINDOW_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY, OrgTheldusAnipaperWindowProxyClass))
#define IS_ORG_THELDUS_ANIPAPER_WINDOW_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY))
#define IS_ORG_THELDUS_ANIPAPER_WINDOW_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_PROXY))

typedef struct _OrgTheldusAnipaperWindowProxy OrgTheldusAnipaperWindowProxy;
typedef struct _OrgTheldusAnipaperWindowProxyClass OrgTheldusAnipaperWindowProxyClass;
typedef struct _OrgTheldusAnipaperWindowProxyPrivate OrgTheldusAnipaperWindowProxyPrivate;

struct _OrgTheldusAnipaperWindowProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgTheldusAnipaperWindowProxyPrivate *priv;
};

struct _OrgTheldusAnipaperWindowProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_theldus_anipaper_window_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgTheldusAnipaperWindowProxy, g_object_unref)
#endif

void org_theldus_anipaper_window_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgTheldusAnipaperWindow *org_theldus_anipaper_window_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgTheldusAnipaperWindow *org_theldus_anipaper_window_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_theldus_anipaper_window_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgTheldusAnipaperWindow *org_theldus_anipaper_window_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgTheldusAnipaperWindow *org_theldus_anipaper_window_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON (org_theldus_anipaper_window_skeleton_get_type ())
#define ORG_THELDUS_ANIPAPER_WINDOW_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON, OrgTheldusAnipaperWindowSkeleton))
#define ORG_THELDUS_ANIPAPER_WINDOW_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON, OrgTheldusAnipaperWindowSkeletonClass))
#define ORG_THELDUS_ANIPAPER_WINDOW_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON, OrgTheldusAnipaperWindowSkeletonClass))
#define IS_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON))
#define IS_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_THELDUS_ANIPAPER_WINDOW_SKELETON))

typedef struct _OrgTheldusAnipaperWindowSkeleton OrgTheldusAnipaperWindowSkeleton;
typedef struct _OrgTheldusAnipaperWindowSkeletonClass OrgTheldusAnipaperWindowSkeletonClass;
typedef struct _OrgTheldusAnipaperWindowSkeletonPrivate OrgTheldusAnipaperWindowSkeletonPrivate;

struct _OrgTheldusAnipaperWindowSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgTheldusAnipaperWindowSkeletonPrivate *priv;
};

struct _OrgTheldusAnipaperWindowSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_theldus_anipaper_window_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgTheldusAnipaperWindowSkeleton, g_object_unref)
#endif

OrgTheldusAnipaperWindow *org_theldus_anipaper_window_skeleton_new (void);


G_END_DECLS

#endif /* __DBUS_PAUSE_H__ */
